services:
  pro1014_server:
    build: .
    container_name: pro1014_server
    ports:
      - "8888:80"
    environment:
      - JWT_SECRET=${JWT_SECRET:-dev-secret-change-me}
      - DB_HOST=${DB_HOST:-pro1014_server_db}
      - DB_PORT=${DB_PORT:-3306}
      - DB_NAME=${DB_NAME:-pro1014_schema}
      - DB_USER=${DB_USER:-pro1014}
      - DB_PASSWORD=${DB_PASSWORD:-pro1014pass}
      - CORS_ALLOW_ALL=${CORS_ALLOW_ALL:-true}
      - CORS_ALLOW_CREDENTIALS=${CORS_ALLOW_CREDENTIALS:-true}
    volumes:
      - ./:/var/www/html
    depends_on:
      pro1014_server_db:
        condition: service_healthy
    networks:
      - pro1014_net

  pro1014_server_db:
    image: mysql:8.0
    container_name: pro1014_server_db
    command: ["mysqld", "--default-authentication-plugin=mysql_native_password", "--character-set-server=utf8mb4", "--collation-server=utf8mb4_unicode_ci"]
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-rootpass}
      - MYSQL_DATABASE=${DB_NAME:-pro1014_schema}
      - MYSQL_USER=${DB_USER:-pro1014}
      - MYSQL_PASSWORD=${DB_PASSWORD:-pro1014pass}
    ports:
      - "3307:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./pro1014_schema.sql:/docker-entrypoint-initdb.d/01_schema.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -p$${MYSQL_ROOT_PASSWORD}"]
      interval: 5s
      timeout: 3s
      retries: 20
    networks:
      - pro1014_net

volumes:
  db_data:

networks:
  pro1014_net:
